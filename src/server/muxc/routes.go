// Code generated by muxc. DO NOT EDIT.
// versions:
//   muxc v1.0.0
// source: muxc.yaml

package muxc

import (
	"net/http"

	"github.com/enolgor/golang-webservice-template/application"
	"github.com/enolgor/golang-webservice-template/server/handlers"
	"github.com/enolgor/golang-webservice-template/server/handlers/components"
	"github.com/enolgor/golang-webservice-template/server/interceptors"
	"github.com/enolgor/golang-webservice-template/server/middlewares"
	"github.com/enolgor/golang-webservice-template/models"
)

func chain(f http.HandlerFunc, middlewares ...func(http.HandlerFunc) http.HandlerFunc) http.HandlerFunc {
	for _, m := range middlewares {
		f = m(f)
	}
	return f
}

func Middleware(m func(http.Handler) http.Handler) func(http.HandlerFunc) http.HandlerFunc {
	return func(next http.HandlerFunc) http.HandlerFunc {
		return m(next).ServeHTTP
	}
}

func ConfigureMux(mux *http.ServeMux, app *application.App) {
	admin := middlewares.Authenticated(app, models.ADMIN)
	interceptor := middlewares.Intercept(app, interceptors.ErrorInterceptor(app))
	logger := middlewares.Logger(app)
	template := middlewares.StaticTemplate(app)
	mux.Handle("GET /login", chain(
		handlers.Login(app),
		interceptor,
		logger,
	))
	mux.Handle("GET /auth0/callback", chain(
		handlers.Auth0Callback(app),
		interceptor,
		logger,
	))
	mux.Handle("GET /logout", chain(
		handlers.Logout(app),
		interceptor,
		logger,
	))
	mux.Handle("GET /js/timezones.js", chain(
		handlers.TimeZonesJS(app),
		interceptor,
		logger,
	))
	mux.Handle("GET /components/profile", chain(
		components.Profile(app),
		interceptor,
		logger,
	))
	mux.Handle("GET /components/nav", chain(
		components.Nav(app),
		interceptor,
		logger,
	))
	mux.Handle("GET /admin/", chain(
		handlers.Static(app),
		template,
		admin,
		interceptor,
		logger,
	))
	mux.Handle("GET /", chain(
		handlers.Static(app),
		template,
		interceptor,
		logger,
	))
}
